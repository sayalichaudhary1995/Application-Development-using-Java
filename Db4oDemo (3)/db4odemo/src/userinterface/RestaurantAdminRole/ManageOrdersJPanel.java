/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import userinterface.DeliveryManRole.*;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Items;
import Business.Order;
import Business.Organization;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sayu
 */
public class ManageOrdersJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
   private  UserAccount account;
    private Organization organization;
     private Enterprise enterprise;
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public ManageOrdersJPanel(JPanel userProcessContainer,EcoSystem business,Enterprise enterprise, Organization organization, UserAccount account) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
       this.account=account;
        this.organization=organization;
        this.enterprise=enterprise;
        this.business=business;
        
        populateTable();
    }
    
    public void populateTable(){
          DefaultTableModel dtm = (DefaultTableModel) orderJTable.getModel();
        dtm.setRowCount(0);
        for(Order order:business.getOrderDirectory().getOrderList()) {
   if(order.getRestaurantName()!=null && order.getRestaurantName().equals(enterprise.getName())){
            Object row[] = new Object[4];
            row[0] = order;
            //row[1] = order.getCustomerId();
            row[1] = order.getCustomerName();
            row[2] = order.getStatus();
            row[3] = order.getMessage();
     
            dtm.addRow(row);
        }
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();
        refreshJButton = new javax.swing.JButton();
        btnAssigndeliveryman = new javax.swing.JButton();
        btnAcceptOrder = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnOrderDetails = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderdetailsTable = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order Id", "Customer Name", "Status", "Customer Notes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderJTable);
        if (orderJTable.getColumnModel().getColumnCount() > 0) {
            orderJTable.getColumnModel().getColumn(1).setResizable(false);
            orderJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 940, 96));

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 20, -1, -1));

        btnAssigndeliveryman.setText("Assign DeliveryMan");
        btnAssigndeliveryman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssigndeliverymanActionPerformed(evt);
            }
        });
        add(btnAssigndeliveryman, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, -1, -1));

        btnAcceptOrder.setText("Accept Order");
        btnAcceptOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptOrderActionPerformed(evt);
            }
        });
        add(btnAcceptOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, -1, -1));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        btnOrderDetails.setText("Order Details");
        btnOrderDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderDetailsActionPerformed(evt);
            }
        });
        add(btnOrderDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        orderdetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dish", "Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderdetailsTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 280, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void btnAssigndeliverymanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssigndeliverymanActionPerformed
        // TODO add your handling code here:
         int selectedRow = orderJTable.getSelectedRow();
       
       if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order"); 
            
        }
        
        Order order1 = (Order)orderJTable.getValueAt(selectedRow, 0);
         if(order1.getStatus().equals("delivered")){
            JOptionPane.showMessageDialog(null, "This order is delivered");
          }
         else if(order1.getStatus().equals("order received")){
             JOptionPane.showMessageDialog(null, "order received by the customer");
         }
         else if(order1.getStatus().equals("order placed")){
            JOptionPane.showMessageDialog(null, "accept the order first");
          }
         else if(order1.getStatus().equals("assigned")){
             JOptionPane.showMessageDialog(null, "Already assigned");
         }
        
         else{
         AssignDeliveryManJPanel panel = new AssignDeliveryManJPanel(userProcessContainer,order1,business);
        userProcessContainer.add("AssignDeliveryManJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
         }
    }//GEN-LAST:event_btnAssigndeliverymanActionPerformed

    private void btnAcceptOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderJTable.getSelectedRow();
       
       if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order"); 
            
        }
        
        Order order1 = (Order)orderJTable.getValueAt(selectedRow, 0);
        
        if(order1.getStatus().equals("delivered")){
            JOptionPane.showMessageDialog(null, "Order is already delivery");
        }
        else if(order1.getStatus().equals("order received")){
             JOptionPane.showMessageDialog(null, "already received by user.");
        }
        else if(order1.getStatus().equals("assigned")){
             JOptionPane.showMessageDialog(null, "Already assigned to delivery");
        }
        
        else if(order1.getStatus().equals("accepted")){
             JOptionPane.showMessageDialog(null, "Already accepted");
        }
        else{
         order1.setStatus("accepted");
         JOptionPane.showMessageDialog(null, "Order accepted successfully");
        }
    }//GEN-LAST:event_btnAcceptOrderActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnOrderDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderDetailsActionPerformed
        // TODO add your handling code here:
       int selectedRow = orderJTable.getSelectedRow();
       if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order"); 
            return;
        }
       Order order1 = (Order)orderJTable.getValueAt(selectedRow, 0);
            DefaultTableModel dtm = (DefaultTableModel) orderdetailsTable.getModel();
        dtm.setRowCount(0);
        for(Items i:order1.getItemsList()) {
            Object row[] = new Object[2];
            row[0] = i;
            row[1] = i.getPrice();
            dtm.addRow(row);
        }
    
       
        
        
    }//GEN-LAST:event_btnOrderDetailsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptOrder;
    private javax.swing.JButton btnAssigndeliveryman;
    private javax.swing.JButton btnOrderDetails;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderJTable;
    private javax.swing.JTable orderdetailsTable;
    private javax.swing.JButton refreshJButton;
    // End of variables declaration//GEN-END:variables
}
