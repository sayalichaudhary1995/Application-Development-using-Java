/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OrderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sayu
 */
public class AssignDeliveryManJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private OrderWorkRequest order;
    /**
     * Creates new form AssignDeliveryManJPanel
     */
    public AssignDeliveryManJPanel(JPanel userProcessContainer, EcoSystem system, OrderWorkRequest order) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.order = order;
        
        orderTotalJLabel.setText(String.valueOf(order.getOrderAmount()));
        populateOrderDetailsTable();
        populateDeliveryManDropDown();
    }
    private void populateOrderDetailsTable() {
        DefaultTableModel model = (DefaultTableModel) orderDetailsJTable.getModel();

        model.setRowCount(0);

        for (Map.Entry mapElement : order.getOrderItem().entrySet()) {
            Object[] row = new Object[2];
            row[0] = mapElement.getKey();
            row[1] = mapElement.getValue();
            model.addRow(row);
        }
    }
    
    private void populateDeliveryManDropDown() {
        deliveryManJComboBox.removeAllItems();
        for (DeliveryMan deliveryMan : system.getDeliveryManDirectory().getDeliveryManList()) {
            deliveryManJComboBox.addItem(deliveryMan.getName());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        orderDetailsJTable = new javax.swing.JTable();
        orderDetailsJLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        assignDeliveryManJButton = new javax.swing.JButton();
        deliveryManJComboBox = new javax.swing.JComboBox();
        orderTotalJLabel = new javax.swing.JLabel();

        orderDetailsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderDetailsJTable);

        orderDetailsJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        orderDetailsJLabel.setText("Order Details");

        jLabel4.setText("Order Total:");

        jLabel3.setText("Choose Delivery Man:");

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        assignDeliveryManJButton.setText("Assign Delivery Man");
        assignDeliveryManJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignDeliveryManJButtonActionPerformed(evt);
            }
        });

        deliveryManJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        orderTotalJLabel.setText("0.0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(orderDetailsJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(orderTotalJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deliveryManJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(backJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(assignDeliveryManJButton)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(orderDetailsJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orderTotalJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deliveryManJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(assignDeliveryManJButton)
                            .addComponent(backJButton))))
                .addContainerGap(133, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageOrderJPanel dwjp = (ManageOrderJPanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void assignDeliveryManJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignDeliveryManJButtonActionPerformed
        UserAccount deliveryManAcc = new UserAccount();
        String deliveryMan = (String)deliveryManJComboBox.getSelectedItem();
        for (UserAccount userAcc : system.getUserAccountDirectory().getUserAccountList()) {
            if (userAcc.getEmployee().getName().equals(deliveryMan)) {
                deliveryManAcc = userAcc;
            }
        }
        order.setReceiver(deliveryManAcc);
        order.setStatus("In Process");
        for(WorkRequest request: system.getWorkQueue().getWorkRequestList()) {
            if((request.getSender().equals(order.getSender())) && (request.getRequestDate().equals(order.getRequestDate())) && (request.getRestaurantName().equals(order.getRestaurantName())) && (request.getReceiver() == null && request.getStatus().equals("Ordered"))) {
                system.getWorkQueue().getWorkRequestList().remove(request);
                system.getWorkQueue().getWorkRequestList().add(order);
            }
        }
        JOptionPane.showMessageDialog(null, "Delivery Man assigned succesfully!");
    }//GEN-LAST:event_assignDeliveryManJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignDeliveryManJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox deliveryManJComboBox;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel orderDetailsJLabel;
    private javax.swing.JTable orderDetailsJTable;
    private javax.swing.JLabel orderTotalJLabel;
    // End of variables declaration//GEN-END:variables
}
