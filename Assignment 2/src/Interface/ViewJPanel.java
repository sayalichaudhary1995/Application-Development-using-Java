/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Car;
import Business.CarDirectory;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author sayu
 */
public class ViewJPanel extends javax.swing.JPanel {
    private Car car;
    private CarDirectory carDirectory;
    public String checkbox;
    private JPanel userProcessContainer;
    /**
     * Creates new form ViewJPanel
     */
     ViewJPanel(JPanel userProcessContainer, Car car, CarDirectory carDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.car = car;
        this.carDirectory = carDirectory;
        populateDetails();
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
    }
     private void populateDetails(){
        txtTransitLevel.setSelectedItem(car.getTransitLevel());
        txtBrand.setText(car.getbrand());
        txtmodelNo.setText(car.getmodelNo());
        txtserialNo.setText(car.getserialNo());
        txtCity.setText(car.getCity());
        txtCost.setText(Double.toString(car.getPrice()));
        txtNoOfSeats.setText(Integer.toString(car.getSeatCount()));
        txtManufactureYear.setText(Integer.toString(car.getManufactureYear()));
        txtmaintenanceCertificate.setSelectedItem(car.getmaintenanceCertificate());
        checkBox.setSelected(car.getAvailablity().equalsIgnoreCase("Yes"));
        txtRegisterWithUber.setSelectedItem(car.getregisteredwithUber());
        txtDate.setText(car.getDate());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblEnterDetails = new javax.swing.JLabel();
        txtCost = new javax.swing.JTextField();
        lblManufactureYear = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        lblManufacturedBy = new javax.swing.JLabel();
        lblTransitLevel = new javax.swing.JLabel();
        lblModelNumber = new javax.swing.JLabel();
        txtBrand = new javax.swing.JTextField();
        txtTransitLevel = new javax.swing.JComboBox();
        btnBack = new javax.swing.JButton();
        txtmodelNo = new javax.swing.JTextField();
        lblSerialNo = new javax.swing.JLabel();
        txtserialNo = new javax.swing.JTextField();
        lblAvailableCity = new javax.swing.JLabel();
        txtManufactureYear = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lblAvailable = new javax.swing.JLabel();
        lblMaintenanceCertificate = new javax.swing.JLabel();
        txtRegisterWithUber = new javax.swing.JComboBox();
        lblNoOfSeats = new javax.swing.JLabel();
        lblRegisterWithUber = new javax.swing.JLabel();
        txtNoOfSeats = new javax.swing.JTextField();
        txtmaintenanceCertificate = new javax.swing.JComboBox();
        lblDate = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        checkBox = new javax.swing.JCheckBox();

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        lblEnterDetails.setBackground(new java.awt.Color(0, 0, 0));
        lblEnterDetails.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblEnterDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEnterDetails.setText("View Details");

        txtCost.setEditable(false);
        txtCost.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtCost.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtCost.setBorder(null);
        txtCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCostActionPerformed(evt);
            }
        });

        lblManufactureYear.setBackground(new java.awt.Color(0, 0, 0));
        lblManufactureYear.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblManufactureYear.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblManufactureYear.setText("Manufacture Year:");

        lblPrice.setBackground(new java.awt.Color(0, 0, 0));
        lblPrice.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblPrice.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblPrice.setText("Cost");

        lblManufacturedBy.setBackground(new java.awt.Color(0, 0, 0));
        lblManufacturedBy.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblManufacturedBy.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblManufacturedBy.setText("Brand Name");

        lblTransitLevel.setBackground(new java.awt.Color(0, 0, 0));
        lblTransitLevel.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblTransitLevel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblTransitLevel.setText("Transit Level");

        lblModelNumber.setBackground(new java.awt.Color(0, 0, 0));
        lblModelNumber.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblModelNumber.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblModelNumber.setText("Model Number:");

        txtBrand.setEditable(false);
        txtBrand.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtBrand.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtBrand.setBorder(null);

        txtTransitLevel.setEditable(true);
        txtTransitLevel.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        txtTransitLevel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Hatchback", "Sedan", "SUV", "Crossover", "Convertible" }));
        txtTransitLevel.setEnabled(false);
        txtTransitLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTransitLevelActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtmodelNo.setEditable(false);
        txtmodelNo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtmodelNo.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtmodelNo.setBorder(null);

        lblSerialNo.setBackground(new java.awt.Color(0, 0, 0));
        lblSerialNo.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblSerialNo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSerialNo.setText("Serial Number:");

        txtserialNo.setEditable(false);
        txtserialNo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtserialNo.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtserialNo.setBorder(null);

        lblAvailableCity.setBackground(new java.awt.Color(0, 0, 0));
        lblAvailableCity.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblAvailableCity.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblAvailableCity.setText("City Available:");

        txtManufactureYear.setEditable(false);
        txtManufactureYear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtManufactureYear.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtManufactureYear.setBorder(null);

        txtCity.setEditable(false);
        txtCity.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtCity.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtCity.setBorder(null);

        btnUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdate.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(255, 255, 255));
        btnSave.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblAvailable.setBackground(new java.awt.Color(0, 0, 0));
        lblAvailable.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblAvailable.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblAvailable.setText("Available:");

        lblMaintenanceCertificate.setBackground(new java.awt.Color(0, 0, 0));
        lblMaintenanceCertificate.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblMaintenanceCertificate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblMaintenanceCertificate.setText("Maintenance Certificate:");

        txtRegisterWithUber.setEditable(true);
        txtRegisterWithUber.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        txtRegisterWithUber.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Yes", "No" }));
        txtRegisterWithUber.setEnabled(false);
        txtRegisterWithUber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegisterWithUberActionPerformed(evt);
            }
        });

        lblNoOfSeats.setBackground(new java.awt.Color(0, 0, 0));
        lblNoOfSeats.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblNoOfSeats.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblNoOfSeats.setText("No of Seats:");

        lblRegisterWithUber.setBackground(new java.awt.Color(0, 0, 0));
        lblRegisterWithUber.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblRegisterWithUber.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblRegisterWithUber.setText("Used By Uber:");

        txtNoOfSeats.setEditable(false);
        txtNoOfSeats.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtNoOfSeats.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtNoOfSeats.setBorder(null);

        txtmaintenanceCertificate.setEditable(true);
        txtmaintenanceCertificate.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        txtmaintenanceCertificate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Valid", "Expired" }));
        txtmaintenanceCertificate.setEnabled(false);
        txtmaintenanceCertificate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmaintenanceCertificateActionPerformed(evt);
            }
        });

        lblDate.setBackground(new java.awt.Color(0, 0, 0));
        lblDate.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblDate.setText("Date:");

        txtDate.setEditable(false);
        txtDate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtDate.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtDate.setBorder(null);
        txtDate.setEnabled(false);

        checkBox.setEnabled(false);
        checkBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(btnBack))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMaintenanceCertificate)
                                    .addComponent(lblAvailable))
                                .addGap(62, 62, 62)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkBox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtmaintenanceCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(51, 51, 51)
                                .addComponent(lblRegisterWithUber)
                                .addGap(18, 18, 18)
                                .addComponent(txtRegisterWithUber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblDate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblPrice)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblManufacturedBy)
                                        .addGap(44, 44, 44)
                                        .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblAvailableCity)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblTransitLevel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtTransitLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(93, 93, 93)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblSerialNo)
                                            .addComponent(lblModelNumber)
                                            .addComponent(lblNoOfSeats))
                                        .addGap(36, 36, 36)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNoOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtmodelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtserialNo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblManufactureYear)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtManufactureYear, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblEnterDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(247, 247, 247))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblEnterDetails)
                                    .addComponent(btnBack))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblManufacturedBy)
                                            .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(24, 24, 24))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblSerialNo)
                                            .addComponent(txtserialNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblModelNumber)
                                    .addComponent(lblAvailableCity)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtmodelNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTransitLevel)
                                    .addComponent(txtTransitLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNoOfSeats)
                                    .addComponent(txtNoOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(lblPrice))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblManufactureYear)
                                            .addComponent(txtManufactureYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblDate)
                                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addComponent(lblRegisterWithUber))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblMaintenanceCertificate)
                                            .addComponent(txtmaintenanceCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(14, 14, 14))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtRegisterWithUber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)))
                                .addComponent(lblAvailable))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkBox)))
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnSave))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 946, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 34, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCostActionPerformed

    private void txtTransitLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTransitLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTransitLevelActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ManageJPanel panel = new ManageJPanel(userProcessContainer, carDirectory);
        userProcessContainer.add("ManageJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
       
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        
        txtTransitLevel.setEditable(true);
        txtBrand.setEditable(true);
        txtmodelNo.setEditable(true);
        txtserialNo.setEditable(true);
        txtCity.setEditable(true);
        txtNoOfSeats.setEditable(true);
        txtCost.setEditable(true);
        txtManufactureYear.setEditable(true);
        txtmaintenanceCertificate.setEditable(true);
        txtRegisterWithUber.setEditable(true);
        txtTransitLevel.setEnabled(true);
        txtBrand.setEnabled(true);
        txtmodelNo.setEnabled(true);
        txtserialNo.setEnabled(true);
        txtCity.setEnabled(true);
        txtNoOfSeats.setEnabled(true);
        txtCost.setEnabled(true);
        txtManufactureYear.setEnabled(true);
        txtmaintenanceCertificate.setEnabled(true);
        checkBox.setEnabled(true);
        txtRegisterWithUber.setEnabled(true);
        txtDate.setEnabled(false);
        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        DateFormat dateformat = new SimpleDateFormat("MM:dd:YYYY");
        Date dateObj = new Date();
        String j = dateformat.format(dateObj);
        car.setDate(j);
        
        String transitLevel = txtTransitLevel.getSelectedItem().toString();
        if (transitLevel == null || transitLevel.equalsIgnoreCase("Select")) {
            JOptionPane.showMessageDialog(null, "Please select a Transit Level!");
            return;
        }
        String brand = txtBrand.getText();
        if (brand == null || brand.equals("")) {
            JOptionPane.showMessageDialog(null, "Brand Name is empty!");
            return;
        }
        String modelNo = txtmodelNo.getText();
        if (modelNo == null || modelNo.equals("")) {
            JOptionPane.showMessageDialog(null, "Model Number is empty!");
            return;
        }
        String serialNo = txtserialNo.getText();
        if (serialNo == null || serialNo.equals("")) {
            JOptionPane.showMessageDialog(null, "Serial Number is empty!");
            return;
        }
        
        String city = txtCity.getText();
        if (city == null || city.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a valid City Name!");
            return;
        }
       
        
        
        String seatCount = txtNoOfSeats.getText();
        try{
            Integer.parseInt(seatCount);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please type in a integer value for No of Seats");
            return;
        }
        String cost = txtCost.getText();
        try{
            Double.parseDouble(cost);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please type in a Double value for Cost");
            return;
        }
        String manufactureYear = txtManufactureYear.getText();
        try{
            Integer.parseInt(manufactureYear);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please type in a Integer value for Manufactured Year");
            return;
        }
        String maintenanceCertificate = txtmaintenanceCertificate.getSelectedItem().toString();
        if (maintenanceCertificate == null || maintenanceCertificate.equalsIgnoreCase("Select")) {
            JOptionPane.showMessageDialog(null, "Please select the status of maintenance certificate");
            return;
        }
        
        String registeredwithUber = txtRegisterWithUber.getSelectedItem().toString();
        if (registeredwithUber == null || registeredwithUber.equalsIgnoreCase("Select")) {
            JOptionPane.showMessageDialog(null, "Please select Registration with Uber");
            return;
        }
       
      

        
        car.setTransitLevel(txtTransitLevel.getSelectedItem().toString());
        car.setbrand(txtBrand.getText());
        car.setmodelNo(txtmodelNo.getText());
        car.setserialNo(txtserialNo.getText());
        car.setCity(txtCity.getText());
        car.setSeatCount(Integer.parseInt(txtNoOfSeats.getText()));
        car.setPrice(Double.parseDouble(txtCost.getText()));
        car.setManufactureYear(Integer.parseInt(txtManufactureYear.getText()));
        car.setmaintenanceCertificate(txtmaintenanceCertificate.getSelectedItem().toString());
        car.setAvailablity(checkbox);
        car.setregisteredwithUber(txtRegisterWithUber.getSelectedItem().toString());
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
        JOptionPane.showMessageDialog(null,"Car details updated successfully!");
        txtTransitLevel.setEnabled(false);
        txtBrand.setEditable(false);
        txtmodelNo.setEditable(false);
        txtserialNo.setEditable(false);
        txtCity.setEditable(false);
        txtNoOfSeats.setEditable(false);
        txtCost.setEditable(false);
        txtManufactureYear.setEditable(false);
        txtmaintenanceCertificate.setEnabled(false);
        checkBox.setEnabled(false);
        txtRegisterWithUber.setEnabled(false);
        txtDate.setEnabled(false);
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtRegisterWithUberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRegisterWithUberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRegisterWithUberActionPerformed

    private void txtmaintenanceCertificateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmaintenanceCertificateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmaintenanceCertificateActionPerformed

    private void checkBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxActionPerformed
        // TODO add your handling code here:
        if(checkBox.isSelected())
        {
            checkbox = "Yes";
        }
        else
        {
            checkbox = "No";
        }
    }//GEN-LAST:event_checkBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox checkBox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAvailable;
    private javax.swing.JLabel lblAvailableCity;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblEnterDetails;
    private javax.swing.JLabel lblMaintenanceCertificate;
    private javax.swing.JLabel lblManufactureYear;
    private javax.swing.JLabel lblManufacturedBy;
    private javax.swing.JLabel lblModelNumber;
    private javax.swing.JLabel lblNoOfSeats;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblRegisterWithUber;
    private javax.swing.JLabel lblSerialNo;
    private javax.swing.JLabel lblTransitLevel;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCost;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtManufactureYear;
    private javax.swing.JTextField txtNoOfSeats;
    private javax.swing.JComboBox txtRegisterWithUber;
    private javax.swing.JComboBox txtTransitLevel;
    private javax.swing.JComboBox txtmaintenanceCertificate;
    private javax.swing.JTextField txtmodelNo;
    private javax.swing.JTextField txtserialNo;
    // End of variables declaration//GEN-END:variables
}
